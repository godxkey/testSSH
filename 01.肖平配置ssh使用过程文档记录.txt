
Administrator@LY-201603251851 MINGW64 /d/传智播客document-肖平/webstorm xiaoping                                                      /0016.王朝华老师NODE，GIT，npm,框架结构/01.学习git-肖平/10.配置ssh肖平
$ git config --list
core.symlinks=false
core.autocrlf=true
core.fscache=true
color.diff=auto
color.status=auto
color.branch=auto
color.interactive=true
help.format=html
http.sslcainfo=C:/Program Files/GitXp/mingw64/ssl/cer                                                                                 ts/ca-bundle.crt
diff.astextplain.textconv=astextplain
rebase.autosquash=true
user.name=xiaoping
user.email=godxkey@outlook.com
user.password=xp
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.required=true

Administrator@LY-201603251851 MINGW64 /d/传智播客docu                                                                                 ment-肖平/webstorm xiaoping/0016.王朝华老师NODE，GIT                                                                                 ，npm,框架结构/01.学习git-肖平/10.配置ssh肖平
$ ssh-keygen -t rsa -C "godxkey@outlook.com"
Generating public/private rsa key pair.
Enter file in which to save the key (/c/Users/Adminis                                                                                 trator/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /c/Users/Admini                                                                                 strator/.ssh/id_rsa.
Your public key has been saved in /c/Users/Administra                                                                                 tor/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:wn2YHbcmf9CbEHPOrbZFSNCSp4N4z4jICekFqIepnHk go                                                                                 dxkey@outlook.com
The key's randomart image is:
+---[RSA 2048]----+
|   .        .o   |
|  . .       o.o  |
| +   o   ...++o  |
|+ . o....+oooX o |
|o.o. +ooSo++=.= o|
|.+ E. +....+oo = |
|  .         . * .|
|             o o |
|              .  |
+----[SHA256]-----+

Administrator@LY-201603251851 MINGW64 /d/传智播客docu                                                                                 ment-肖平/webstorm xiaoping/0016.王朝华老师NODE，GIT                                                                                 ，npm,框架结构/01.学习git-肖平/10.配置ssh肖平
$





【客户端操作】
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/o6EUj9Y0ZIsTkEtwfwTsqoI3s9RbXbMd5HXwPnPynWFW5TVRcajLuqcF2yd9maw+ZRIFuBgsjnODVCg23cnwBvYFZnDqvbZk6IIYU0tKPQ7dgs4QaVqwWXiSH6ixm1aXFeGCtFMJQJ5211CZRz+6FP251JqIoremkLzRK95mK28ZecxVUz1rb5LrRrrnckbk6y9q4MvClQbRl4Iswnxj9JKvQwZZ7TGKoIPcWmxmFeamTA2s5rsQp/2lMe1P1ByzA42lhgQBP65A3/puFswgUgi5nGRLxEGT7TKhF/M7wNKd/3SZSJebPFkTvI33v9X3drh3fC6ebOAZhxqzeZUZ godxkey@outlook.com

第2步：登陆GitHub，打开“Account settings”，“SSH Keys”页面：

然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容：

github-addkey-1

点“Add Key”，你就应该看到已经添加的Key：

github-addkey-2

为什么GitHub需要SSH Key呢？因为GitHub需要识别出你推送的提交确实是你推送的，而不是别人冒充的，而Git支持SSH协议，所以，GitHub只要知道了你的公钥，就可以确认只有你自己才能推送。

当然，GitHub允许你添加多个Key。假定你有若干电脑，你一会儿在公司提交，一会儿在家里提交，只要把每台电脑的Key都添加到GitHub，就可以在每台电脑上往GitHub推送了。

现在，我们根据GitHub的提示，在本地的learngit仓库下运行命令：

$ git remote add origin git@github.com:cqcre/cqc.git
请千万注意，把上面的 cqcre 替换成你自己的GitHub账户名，否则，你在本地关联的就是我的远程库，关联没有问题，但是你以后推送是推不上去的，因为你的SSH Key公钥不在我的账户列表中。

添加后，远程库的名字就是origin，这是Git默认的叫法，也可以改成别的，但是origin这个名字一看就知道是远程库。

下一步，就可以把本地库的所有内容推送到远程库上：

$ git push -u origin master
好啦，静静等待git把你的代码Push上去吧

[成功步骤]
Quick setup — if you’ve done this kind of thing before
 Set up in Desktop	or	
 HTTPS
 SSH

git@github.com:godxkey/testSSH.git

We recommend every repository include a README, LICENSE, and .gitignore.
…or create a new repository on the command line

echo "# testSSH" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin git@github.com:godxkey/testSSH.git
git push -u origin master
…or push an existing repository from the command line

git remote add origin git@github.com:godxkey/testSSH.git
git push -u origin master
…or import code from another repository
You can initialize this repository with code from a Subversion, Mercurial, or TFS project.

Import code


【https://github.com/godxkey/testSSH】
